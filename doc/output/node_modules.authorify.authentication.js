Ext.data.JsonP.node_modules_authorify_authentication({"mixedInto":[],"subclasses":[],"requires":[],"parentMixins":[],"author":[{"tagname":"author","name":"Marcello Gesmundo","email":null}],"autodetected":{},"uses":[],"superclasses":[],"alternateClassNames":[],"mixins":[],"members":[],"tagname":"class","short_doc":"The authentication middleware. ...","meta":{},"name":"node_modules.authorify.authentication","component":false,"id":"class-node_modules.authorify.authentication","html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/authentication.html#node_modules-authorify-authentication' target='_blank'>authentication.js</a></div></pre><div class='doc-contents'><p>The authentication middleware.</p>\n\n<h2>Example</h2>\n\n<pre><code>// dependencies\n var fs = require('fs'),\n     path = require('path'),\n     restify = require('restify');\n\n // create the server\n server = restify.createServer();\n\n // configure authorify middleware\n var authorify = require('authorify')({\n     debug: true,\n     key : fs.readFileSync(path.join(__dirname,'cert/serverCert.key'), 'utf8'),\n     cert: fs.readFileSync(path.join(__dirname,'cert/serverCert.cer'), 'utf8'),\n     ca  :  fs.readFileSync(path.join(__dirname,'cert/serverCA.cer'), 'utf8'),\n     // define your login function!\n     login: function(id, app, username, password, callback) {\n       if (username === 'username' &amp;&amp; password === 'password') {\n         callback(1, ['admin']);\n       } else if (username === 'user' &amp;&amp; password === 'pass') {\n         callback(2, ['user']);\n       } else {\n         callback(new Error('wrong credentials'));\n         // or simply\n         // callback('wrong credentials');\n       }\n     }\n   });\n\n // add all middleares\n server.use(restify.queryParser({ mapParams: false }));\n server.use(restify.bodyParser());\n server.use(authorify.authentication);\n\n // define default handler\n var ok = function(req, res, next){\n   // define your response\n   res.send({ success: true, message: 'ok' });\n };\n server.get('/handshake', ok);\n server.get('/auth', ok);\n server.get('/logout', function(req, res, next) {\n   res.send({ success: true, message: 'logged out' })\n });\n\n // start the server\n server.listen(3000);\n</code></pre>\n\n<h1>License</h1>\n\n<p>Copyright (c) 2012-2014 Yoovant by Marcello Gesmundo. All rights reserved.</p>\n\n<p>This program is released under a GNU Affero General Public License version 3 or above, which in summary means:</p>\n\n<ul>\n<li>You <strong>can use</strong> this program for <strong>no cost</strong>.</li>\n<li>You <strong>can use</strong> this program for <strong>both personal and commercial reasons</strong>.</li>\n<li>You <strong>do not have to share your own program's code</strong> which uses this program.</li>\n<li>You <strong>have to share modifications</strong> (e.g bug-fixes) you've made to this program.</li>\n</ul>\n\n\n<p>For more convoluted language, see the LICENSE file.</p>\n</div><div class='members'></div></div>","aliases":{},"files":[{"href":"authentication.html#node_modules-authorify-authentication","filename":"authentication.js"}]});